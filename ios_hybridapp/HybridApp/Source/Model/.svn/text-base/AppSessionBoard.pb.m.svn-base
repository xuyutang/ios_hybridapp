// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "AppSessionBoard.pb.h"

@implementation AppSessionBoardRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AppSessionBoardRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AppSessionRequest ()
@property (retain) NSString* sequence;
@property (retain) NSString* requestMapping;
@property (retain) NSString* content;
@property (retain) PBAppendableArray * sessionFilesArray;
@property (retain) NSString* authToken;
@end

@implementation AppSessionRequest

- (BOOL) hasSequence {
  return !!hasSequence_;
}
- (void) setHasSequence:(BOOL) value_ {
  hasSequence_ = !!value_;
}
@synthesize sequence;
- (BOOL) hasRequestMapping {
  return !!hasRequestMapping_;
}
- (void) setHasRequestMapping:(BOOL) value_ {
  hasRequestMapping_ = !!value_;
}
@synthesize requestMapping;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
@synthesize sessionFilesArray;
@dynamic sessionFiles;
- (BOOL) hasAuthToken {
  return !!hasAuthToken_;
}
- (void) setHasAuthToken:(BOOL) value_ {
  hasAuthToken_ = !!value_;
}
@synthesize authToken;
- (void) dealloc {
  self.sequence = nil;
  self.requestMapping = nil;
  self.content = nil;
  self.sessionFilesArray = nil;
  self.authToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sequence = @"";
    self.requestMapping = @"";
    self.content = @"";
    self.authToken = @"";
  }
  return self;
}
static AppSessionRequest* defaultAppSessionRequestInstance = nil;
+ (void) initialize {
  if (self == [AppSessionRequest class]) {
    defaultAppSessionRequestInstance = [[AppSessionRequest alloc] init];
  }
}
+ (AppSessionRequest*) defaultInstance {
  return defaultAppSessionRequestInstance;
}
- (AppSessionRequest*) defaultInstance {
  return defaultAppSessionRequestInstance;
}
- (PBArray *)sessionFiles {
  return sessionFilesArray;
}
- (SessionFile*)sessionFilesAtIndex:(NSUInteger)index {
  return [sessionFilesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasSequence) {
    return NO;
  }
  if (!self.hasRequestMapping) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  for (SessionFile* element in self.sessionFiles) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSequence) {
    [output writeString:1 value:self.sequence];
  }
  if (self.hasRequestMapping) {
    [output writeString:2 value:self.requestMapping];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  for (SessionFile *element in self.sessionFilesArray) {
    [output writeMessage:4 value:element];
  }
  if (self.hasAuthToken) {
    [output writeString:5 value:self.authToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSequence) {
    size_ += computeStringSize(1, self.sequence);
  }
  if (self.hasRequestMapping) {
    size_ += computeStringSize(2, self.requestMapping);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  for (SessionFile *element in self.sessionFilesArray) {
    size_ += computeMessageSize(4, element);
  }
  if (self.hasAuthToken) {
    size_ += computeStringSize(5, self.authToken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AppSessionRequest*) parseFromData:(NSData*) data {
  return (AppSessionRequest*)[[[AppSessionRequest builder] mergeFromData:data] build];
}
+ (AppSessionRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSessionRequest*)[[[AppSessionRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AppSessionRequest*) parseFromInputStream:(NSInputStream*) input {
  return (AppSessionRequest*)[[[AppSessionRequest builder] mergeFromInputStream:input] build];
}
+ (AppSessionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSessionRequest*)[[[AppSessionRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSessionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AppSessionRequest*)[[[AppSessionRequest builder] mergeFromCodedInputStream:input] build];
}
+ (AppSessionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSessionRequest*)[[[AppSessionRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSessionRequest_Builder*) builder {
  return [[[AppSessionRequest_Builder alloc] init] autorelease];
}
+ (AppSessionRequest_Builder*) builderWithPrototype:(AppSessionRequest*) prototype {
  return [[AppSessionRequest builder] mergeFrom:prototype];
}
- (AppSessionRequest_Builder*) builder {
  return [AppSessionRequest builder];
}
- (AppSessionRequest_Builder*) toBuilder {
  return [AppSessionRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSequence) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sequence", self.sequence];
  }
  if (self.hasRequestMapping) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestMapping", self.requestMapping];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  for (SessionFile* element in self.sessionFilesArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"sessionFiles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAuthToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authToken", self.authToken];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AppSessionRequest class]]) {
    return NO;
  }
  AppSessionRequest *otherMessage = other;
  return
      self.hasSequence == otherMessage.hasSequence &&
      (!self.hasSequence || [self.sequence isEqual:otherMessage.sequence]) &&
      self.hasRequestMapping == otherMessage.hasRequestMapping &&
      (!self.hasRequestMapping || [self.requestMapping isEqual:otherMessage.requestMapping]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.sessionFilesArray isEqualToArray:otherMessage.sessionFilesArray] &&
      self.hasAuthToken == otherMessage.hasAuthToken &&
      (!self.hasAuthToken || [self.authToken isEqual:otherMessage.authToken]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSequence) {
    hashCode = hashCode * 31 + [self.sequence hash];
  }
  if (self.hasRequestMapping) {
    hashCode = hashCode * 31 + [self.requestMapping hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  for (SessionFile* element in self.sessionFilesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasAuthToken) {
    hashCode = hashCode * 31 + [self.authToken hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AppSessionRequest_Builder()
@property (retain) AppSessionRequest* result;
@end

@implementation AppSessionRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AppSessionRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AppSessionRequest_Builder*) clear {
  self.result = [[[AppSessionRequest alloc] init] autorelease];
  return self;
}
- (AppSessionRequest_Builder*) clone {
  return [AppSessionRequest builderWithPrototype:result];
}
- (AppSessionRequest*) defaultInstance {
  return [AppSessionRequest defaultInstance];
}
- (AppSessionRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AppSessionRequest*) buildPartial {
  AppSessionRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AppSessionRequest_Builder*) mergeFrom:(AppSessionRequest*) other {
  if (other == [AppSessionRequest defaultInstance]) {
    return self;
  }
  if (other.hasSequence) {
    [self setSequence:other.sequence];
  }
  if (other.hasRequestMapping) {
    [self setRequestMapping:other.requestMapping];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.sessionFilesArray.count > 0) {
    if (result.sessionFilesArray == nil) {
      result.sessionFilesArray = [[other.sessionFilesArray copyWithZone:[other.sessionFilesArray zone]] autorelease];
    } else {
      [result.sessionFilesArray appendArray:other.sessionFilesArray];
    }
  }
  if (other.hasAuthToken) {
    [self setAuthToken:other.authToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AppSessionRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AppSessionRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSequence:[input readString]];
        break;
      }
      case 18: {
        [self setRequestMapping:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        SessionFile_Builder* subBuilder = [SessionFile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSessionFiles:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setAuthToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSequence {
  return result.hasSequence;
}
- (NSString*) sequence {
  return result.sequence;
}
- (AppSessionRequest_Builder*) setSequence:(NSString*) value {
  result.hasSequence = YES;
  result.sequence = value;
  return self;
}
- (AppSessionRequest_Builder*) clearSequence {
  result.hasSequence = NO;
  result.sequence = @"";
  return self;
}
- (BOOL) hasRequestMapping {
  return result.hasRequestMapping;
}
- (NSString*) requestMapping {
  return result.requestMapping;
}
- (AppSessionRequest_Builder*) setRequestMapping:(NSString*) value {
  result.hasRequestMapping = YES;
  result.requestMapping = value;
  return self;
}
- (AppSessionRequest_Builder*) clearRequestMapping {
  result.hasRequestMapping = NO;
  result.requestMapping = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (AppSessionRequest_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (AppSessionRequest_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (PBAppendableArray *)sessionFiles {
  return result.sessionFilesArray;
}
- (SessionFile*)sessionFilesAtIndex:(NSUInteger)index {
  return [result sessionFilesAtIndex:index];
}
- (AppSessionRequest_Builder *)addSessionFiles:(SessionFile*)value {
  if (result.sessionFilesArray == nil) {
    result.sessionFilesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.sessionFilesArray addObject:value];
  return self;
}
- (AppSessionRequest_Builder *)setSessionFilesArray:(NSArray *)array {
  result.sessionFilesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (AppSessionRequest_Builder *)setSessionFilesValues:(const SessionFile* *)values count:(NSUInteger)count {
  result.sessionFilesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (AppSessionRequest_Builder *)clearSessionFiles {
  result.sessionFilesArray = nil;
  return self;
}
- (BOOL) hasAuthToken {
  return result.hasAuthToken;
}
- (NSString*) authToken {
  return result.authToken;
}
- (AppSessionRequest_Builder*) setAuthToken:(NSString*) value {
  result.hasAuthToken = YES;
  result.authToken = value;
  return self;
}
- (AppSessionRequest_Builder*) clearAuthToken {
  result.hasAuthToken = NO;
  result.authToken = @"";
  return self;
}
@end

@interface SessionFile ()
@property (retain) NSString* fieldName;
@property (retain) PBAppendableArray * itemsArray;
@end

@implementation SessionFile

- (BOOL) hasFieldName {
  return !!hasFieldName_;
}
- (void) setHasFieldName:(BOOL) value_ {
  hasFieldName_ = !!value_;
}
@synthesize fieldName;
@synthesize itemsArray;
@dynamic items;
- (void) dealloc {
  self.fieldName = nil;
  self.itemsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fieldName = @"";
  }
  return self;
}
static SessionFile* defaultSessionFileInstance = nil;
+ (void) initialize {
  if (self == [SessionFile class]) {
    defaultSessionFileInstance = [[SessionFile alloc] init];
  }
}
+ (SessionFile*) defaultInstance {
  return defaultSessionFileInstance;
}
- (SessionFile*) defaultInstance {
  return defaultSessionFileInstance;
}
- (PBArray *)items {
  return itemsArray;
}
- (SessionFileItem*)itemsAtIndex:(NSUInteger)index {
  return [itemsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasFieldName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFieldName) {
    [output writeString:1 value:self.fieldName];
  }
  for (SessionFileItem *element in self.itemsArray) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFieldName) {
    size_ += computeStringSize(1, self.fieldName);
  }
  for (SessionFileItem *element in self.itemsArray) {
    size_ += computeMessageSize(2, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SessionFile*) parseFromData:(NSData*) data {
  return (SessionFile*)[[[SessionFile builder] mergeFromData:data] build];
}
+ (SessionFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionFile*)[[[SessionFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SessionFile*) parseFromInputStream:(NSInputStream*) input {
  return (SessionFile*)[[[SessionFile builder] mergeFromInputStream:input] build];
}
+ (SessionFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionFile*)[[[SessionFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SessionFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SessionFile*)[[[SessionFile builder] mergeFromCodedInputStream:input] build];
}
+ (SessionFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionFile*)[[[SessionFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SessionFile_Builder*) builder {
  return [[[SessionFile_Builder alloc] init] autorelease];
}
+ (SessionFile_Builder*) builderWithPrototype:(SessionFile*) prototype {
  return [[SessionFile builder] mergeFrom:prototype];
}
- (SessionFile_Builder*) builder {
  return [SessionFile builder];
}
- (SessionFile_Builder*) toBuilder {
  return [SessionFile builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFieldName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fieldName", self.fieldName];
  }
  for (SessionFileItem* element in self.itemsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"items"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SessionFile class]]) {
    return NO;
  }
  SessionFile *otherMessage = other;
  return
      self.hasFieldName == otherMessage.hasFieldName &&
      (!self.hasFieldName || [self.fieldName isEqual:otherMessage.fieldName]) &&
      [self.itemsArray isEqualToArray:otherMessage.itemsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasFieldName) {
    hashCode = hashCode * 31 + [self.fieldName hash];
  }
  for (SessionFileItem* element in self.itemsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SessionFile_Builder()
@property (retain) SessionFile* result;
@end

@implementation SessionFile_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SessionFile alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SessionFile_Builder*) clear {
  self.result = [[[SessionFile alloc] init] autorelease];
  return self;
}
- (SessionFile_Builder*) clone {
  return [SessionFile builderWithPrototype:result];
}
- (SessionFile*) defaultInstance {
  return [SessionFile defaultInstance];
}
- (SessionFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SessionFile*) buildPartial {
  SessionFile* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SessionFile_Builder*) mergeFrom:(SessionFile*) other {
  if (other == [SessionFile defaultInstance]) {
    return self;
  }
  if (other.hasFieldName) {
    [self setFieldName:other.fieldName];
  }
  if (other.itemsArray.count > 0) {
    if (result.itemsArray == nil) {
      result.itemsArray = [[other.itemsArray copyWithZone:[other.itemsArray zone]] autorelease];
    } else {
      [result.itemsArray appendArray:other.itemsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SessionFile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SessionFile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFieldName:[input readString]];
        break;
      }
      case 18: {
        SessionFileItem_Builder* subBuilder = [SessionFileItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addItems:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasFieldName {
  return result.hasFieldName;
}
- (NSString*) fieldName {
  return result.fieldName;
}
- (SessionFile_Builder*) setFieldName:(NSString*) value {
  result.hasFieldName = YES;
  result.fieldName = value;
  return self;
}
- (SessionFile_Builder*) clearFieldName {
  result.hasFieldName = NO;
  result.fieldName = @"";
  return self;
}
- (PBAppendableArray *)items {
  return result.itemsArray;
}
- (SessionFileItem*)itemsAtIndex:(NSUInteger)index {
  return [result itemsAtIndex:index];
}
- (SessionFile_Builder *)addItems:(SessionFileItem*)value {
  if (result.itemsArray == nil) {
    result.itemsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.itemsArray addObject:value];
  return self;
}
- (SessionFile_Builder *)setItemsArray:(NSArray *)array {
  result.itemsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (SessionFile_Builder *)setItemsValues:(const SessionFileItem* *)values count:(NSUInteger)count {
  result.itemsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (SessionFile_Builder *)clearItems {
  result.itemsArray = nil;
  return self;
}
@end

@interface SessionFileItem ()
@property (retain) NSString* type;
@property (retain) NSData* file;
@end

@implementation SessionFileItem

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasFile {
  return !!hasFile_;
}
- (void) setHasFile:(BOOL) value_ {
  hasFile_ = !!value_;
}
@synthesize file;
- (void) dealloc {
  self.type = nil;
  self.file = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = @"";
    self.file = [NSData data];
  }
  return self;
}
static SessionFileItem* defaultSessionFileItemInstance = nil;
+ (void) initialize {
  if (self == [SessionFileItem class]) {
    defaultSessionFileItemInstance = [[SessionFileItem alloc] init];
  }
}
+ (SessionFileItem*) defaultInstance {
  return defaultSessionFileItemInstance;
}
- (SessionFileItem*) defaultInstance {
  return defaultSessionFileItemInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeString:1 value:self.type];
  }
  if (self.hasFile) {
    [output writeData:2 value:self.file];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeStringSize(1, self.type);
  }
  if (self.hasFile) {
    size_ += computeDataSize(2, self.file);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SessionFileItem*) parseFromData:(NSData*) data {
  return (SessionFileItem*)[[[SessionFileItem builder] mergeFromData:data] build];
}
+ (SessionFileItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionFileItem*)[[[SessionFileItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SessionFileItem*) parseFromInputStream:(NSInputStream*) input {
  return (SessionFileItem*)[[[SessionFileItem builder] mergeFromInputStream:input] build];
}
+ (SessionFileItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionFileItem*)[[[SessionFileItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SessionFileItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SessionFileItem*)[[[SessionFileItem builder] mergeFromCodedInputStream:input] build];
}
+ (SessionFileItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SessionFileItem*)[[[SessionFileItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SessionFileItem_Builder*) builder {
  return [[[SessionFileItem_Builder alloc] init] autorelease];
}
+ (SessionFileItem_Builder*) builderWithPrototype:(SessionFileItem*) prototype {
  return [[SessionFileItem builder] mergeFrom:prototype];
}
- (SessionFileItem_Builder*) builder {
  return [SessionFileItem builder];
}
- (SessionFileItem_Builder*) toBuilder {
  return [SessionFileItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", self.type];
  }
  if (self.hasFile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"file", self.file];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SessionFileItem class]]) {
    return NO;
  }
  SessionFileItem *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || [self.type isEqual:otherMessage.type]) &&
      self.hasFile == otherMessage.hasFile &&
      (!self.hasFile || [self.file isEqual:otherMessage.file]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [self.type hash];
  }
  if (self.hasFile) {
    hashCode = hashCode * 31 + [self.file hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SessionFileItem_Builder()
@property (retain) SessionFileItem* result;
@end

@implementation SessionFileItem_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SessionFileItem alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SessionFileItem_Builder*) clear {
  self.result = [[[SessionFileItem alloc] init] autorelease];
  return self;
}
- (SessionFileItem_Builder*) clone {
  return [SessionFileItem builderWithPrototype:result];
}
- (SessionFileItem*) defaultInstance {
  return [SessionFileItem defaultInstance];
}
- (SessionFileItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SessionFileItem*) buildPartial {
  SessionFileItem* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SessionFileItem_Builder*) mergeFrom:(SessionFileItem*) other {
  if (other == [SessionFileItem defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasFile) {
    [self setFile:other.file];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SessionFileItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SessionFileItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setType:[input readString]];
        break;
      }
      case 18: {
        [self setFile:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (NSString*) type {
  return result.type;
}
- (SessionFileItem_Builder*) setType:(NSString*) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (SessionFileItem_Builder*) clearType {
  result.hasType = NO;
  result.type = @"";
  return self;
}
- (BOOL) hasFile {
  return result.hasFile;
}
- (NSData*) file {
  return result.file;
}
- (SessionFileItem_Builder*) setFile:(NSData*) value {
  result.hasFile = YES;
  result.file = value;
  return self;
}
- (SessionFileItem_Builder*) clearFile {
  result.hasFile = NO;
  result.file = [NSData data];
  return self;
}
@end

@interface AppSessionResponse ()
@property (retain) NSString* sequence;
@property (retain) NSString* requestMapping;
@property (retain) NSString* responseCode;
@property (retain) NSString* responseResult;
@end

@implementation AppSessionResponse

- (BOOL) hasSequence {
  return !!hasSequence_;
}
- (void) setHasSequence:(BOOL) value_ {
  hasSequence_ = !!value_;
}
@synthesize sequence;
- (BOOL) hasRequestMapping {
  return !!hasRequestMapping_;
}
- (void) setHasRequestMapping:(BOOL) value_ {
  hasRequestMapping_ = !!value_;
}
@synthesize requestMapping;
- (BOOL) hasResponseCode {
  return !!hasResponseCode_;
}
- (void) setHasResponseCode:(BOOL) value_ {
  hasResponseCode_ = !!value_;
}
@synthesize responseCode;
- (BOOL) hasResponseResult {
  return !!hasResponseResult_;
}
- (void) setHasResponseResult:(BOOL) value_ {
  hasResponseResult_ = !!value_;
}
@synthesize responseResult;
- (void) dealloc {
  self.sequence = nil;
  self.requestMapping = nil;
  self.responseCode = nil;
  self.responseResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sequence = @"";
    self.requestMapping = @"";
    self.responseCode = @"";
    self.responseResult = @"";
  }
  return self;
}
static AppSessionResponse* defaultAppSessionResponseInstance = nil;
+ (void) initialize {
  if (self == [AppSessionResponse class]) {
    defaultAppSessionResponseInstance = [[AppSessionResponse alloc] init];
  }
}
+ (AppSessionResponse*) defaultInstance {
  return defaultAppSessionResponseInstance;
}
- (AppSessionResponse*) defaultInstance {
  return defaultAppSessionResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSequence) {
    [output writeString:1 value:self.sequence];
  }
  if (self.hasRequestMapping) {
    [output writeString:2 value:self.requestMapping];
  }
  if (self.hasResponseCode) {
    [output writeString:3 value:self.responseCode];
  }
  if (self.hasResponseResult) {
    [output writeString:4 value:self.responseResult];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSequence) {
    size_ += computeStringSize(1, self.sequence);
  }
  if (self.hasRequestMapping) {
    size_ += computeStringSize(2, self.requestMapping);
  }
  if (self.hasResponseCode) {
    size_ += computeStringSize(3, self.responseCode);
  }
  if (self.hasResponseResult) {
    size_ += computeStringSize(4, self.responseResult);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AppSessionResponse*) parseFromData:(NSData*) data {
  return (AppSessionResponse*)[[[AppSessionResponse builder] mergeFromData:data] build];
}
+ (AppSessionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSessionResponse*)[[[AppSessionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AppSessionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (AppSessionResponse*)[[[AppSessionResponse builder] mergeFromInputStream:input] build];
}
+ (AppSessionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSessionResponse*)[[[AppSessionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSessionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AppSessionResponse*)[[[AppSessionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (AppSessionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSessionResponse*)[[[AppSessionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSessionResponse_Builder*) builder {
  return [[[AppSessionResponse_Builder alloc] init] autorelease];
}
+ (AppSessionResponse_Builder*) builderWithPrototype:(AppSessionResponse*) prototype {
  return [[AppSessionResponse builder] mergeFrom:prototype];
}
- (AppSessionResponse_Builder*) builder {
  return [AppSessionResponse builder];
}
- (AppSessionResponse_Builder*) toBuilder {
  return [AppSessionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSequence) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sequence", self.sequence];
  }
  if (self.hasRequestMapping) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestMapping", self.requestMapping];
  }
  if (self.hasResponseCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responseCode", self.responseCode];
  }
  if (self.hasResponseResult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responseResult", self.responseResult];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AppSessionResponse class]]) {
    return NO;
  }
  AppSessionResponse *otherMessage = other;
  return
      self.hasSequence == otherMessage.hasSequence &&
      (!self.hasSequence || [self.sequence isEqual:otherMessage.sequence]) &&
      self.hasRequestMapping == otherMessage.hasRequestMapping &&
      (!self.hasRequestMapping || [self.requestMapping isEqual:otherMessage.requestMapping]) &&
      self.hasResponseCode == otherMessage.hasResponseCode &&
      (!self.hasResponseCode || [self.responseCode isEqual:otherMessage.responseCode]) &&
      self.hasResponseResult == otherMessage.hasResponseResult &&
      (!self.hasResponseResult || [self.responseResult isEqual:otherMessage.responseResult]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSequence) {
    hashCode = hashCode * 31 + [self.sequence hash];
  }
  if (self.hasRequestMapping) {
    hashCode = hashCode * 31 + [self.requestMapping hash];
  }
  if (self.hasResponseCode) {
    hashCode = hashCode * 31 + [self.responseCode hash];
  }
  if (self.hasResponseResult) {
    hashCode = hashCode * 31 + [self.responseResult hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AppSessionResponse_Builder()
@property (retain) AppSessionResponse* result;
@end

@implementation AppSessionResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AppSessionResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AppSessionResponse_Builder*) clear {
  self.result = [[[AppSessionResponse alloc] init] autorelease];
  return self;
}
- (AppSessionResponse_Builder*) clone {
  return [AppSessionResponse builderWithPrototype:result];
}
- (AppSessionResponse*) defaultInstance {
  return [AppSessionResponse defaultInstance];
}
- (AppSessionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AppSessionResponse*) buildPartial {
  AppSessionResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AppSessionResponse_Builder*) mergeFrom:(AppSessionResponse*) other {
  if (other == [AppSessionResponse defaultInstance]) {
    return self;
  }
  if (other.hasSequence) {
    [self setSequence:other.sequence];
  }
  if (other.hasRequestMapping) {
    [self setRequestMapping:other.requestMapping];
  }
  if (other.hasResponseCode) {
    [self setResponseCode:other.responseCode];
  }
  if (other.hasResponseResult) {
    [self setResponseResult:other.responseResult];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AppSessionResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AppSessionResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSequence:[input readString]];
        break;
      }
      case 18: {
        [self setRequestMapping:[input readString]];
        break;
      }
      case 26: {
        [self setResponseCode:[input readString]];
        break;
      }
      case 34: {
        [self setResponseResult:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSequence {
  return result.hasSequence;
}
- (NSString*) sequence {
  return result.sequence;
}
- (AppSessionResponse_Builder*) setSequence:(NSString*) value {
  result.hasSequence = YES;
  result.sequence = value;
  return self;
}
- (AppSessionResponse_Builder*) clearSequence {
  result.hasSequence = NO;
  result.sequence = @"";
  return self;
}
- (BOOL) hasRequestMapping {
  return result.hasRequestMapping;
}
- (NSString*) requestMapping {
  return result.requestMapping;
}
- (AppSessionResponse_Builder*) setRequestMapping:(NSString*) value {
  result.hasRequestMapping = YES;
  result.requestMapping = value;
  return self;
}
- (AppSessionResponse_Builder*) clearRequestMapping {
  result.hasRequestMapping = NO;
  result.requestMapping = @"";
  return self;
}
- (BOOL) hasResponseCode {
  return result.hasResponseCode;
}
- (NSString*) responseCode {
  return result.responseCode;
}
- (AppSessionResponse_Builder*) setResponseCode:(NSString*) value {
  result.hasResponseCode = YES;
  result.responseCode = value;
  return self;
}
- (AppSessionResponse_Builder*) clearResponseCode {
  result.hasResponseCode = NO;
  result.responseCode = @"";
  return self;
}
- (BOOL) hasResponseResult {
  return result.hasResponseResult;
}
- (NSString*) responseResult {
  return result.responseResult;
}
- (AppSessionResponse_Builder*) setResponseResult:(NSString*) value {
  result.hasResponseResult = YES;
  result.responseResult = value;
  return self;
}
- (AppSessionResponse_Builder*) clearResponseResult {
  result.hasResponseResult = NO;
  result.responseResult = @"";
  return self;
}
@end

